import { Injectable, OnModuleInit } from '@nestjs/common';
import { Bot, Context, Keyboard, InlineKeyboard } from 'grammy';
import { photoSessions } from '../photoSessions';

@Injectable()
export class TelegramService implements OnModuleInit {
  private bot: Bot<Context>;

  onModuleInit() {
    this.bot = new Bot<Context>(
      '7362217317:AAHNYMrTZEIlMiSYtQ9xOb2B5LuakAWI-QA',
    );

    this.bot.command('start', async (ctx) => {
      const keyboard = new Keyboard();
      for (const session of photoSessions) {
        keyboard.text(session.name).row().resized();
      }

      await ctx.reply(
        '–í–∞—Å –≤—ñ—Ç–∞—î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ–π–Ω–∏–π –±–æ—Ç üì∏, —è–∫–∏–π –¥–æ–ø–æ–º–æ–∂–µ —Ä–æ–∑—ñ–±—Ä–∞—Ç–∏—Å—å, —â–æ –∂ —Ç–∞–∫–µ —Ñ–æ—Ç–æ—Å–µ—Å—ñ—è, —Å–∫—ñ–ª—å–∫–∏ –≤–æ–Ω–∞ –∫–æ—à—Ç—É—î üí∏ —ñ —è–∫ –¥–æ –Ω–µ—ó –ø—ñ–¥–≥–æ—Ç—É–≤–∞—Ç–∏—Å—å ‚ú®.\n\n' +
          '–ù–∞—à–∞ –º–µ—Ç–∞ - –∑—Ä–æ–±–∏—Ç–∏ –≤–∞—à –¥–æ—Å–≤—ñ–¥ —è—Å–∫—Ä–∞–≤–∏–º, –∞ –≤–∞—à—ñ —Ñ–æ—Ç–æ –Ω–µ–∑–∞–±—É—Ç–Ω—ñ–º–∏! üåü\n\n' +
          '–û–±–µ—Ä—ñ—Ç—å —Ç–∏–ø —Ñ–æ—Ç–æ—Å–µ—Å—ñ—ó –Ω–∏–∂—á–µ, —â–æ–± –¥—ñ–∑–Ω–∞—Ç–∏—Å—è –±—ñ–ª—å—à–µ! üòä',
        {
          reply_markup: keyboard,
        },
      );
    });

    this.bot.on('message', async (ctx) => {
      const sessionName = ctx.message.text;
      const session = photoSessions.find(
        (session) => session.name === sessionName,
      );
      if (!session) {
        return;
      }

      const media = session.images.map((image, index) => ({
        type: 'photo',
        media: image,
        caption: index === 0 ? `${session.descr}` : undefined,
        parse_mode: 'Markdown',
      }));

      await ctx.replyWithMediaGroup(media as any);
      const inlineKeyboard = new InlineKeyboard()
        .text('üåç –û–±—Ä–∞—Ç–∏ –ª–æ–∫–∞—Ü—ñ—é –ø–æ –º—ñ—Å—Ç—É', `choose_location:1`)
        .text('üèò –û–±—Ä–∞—Ç–∏ —Å—Ç—É–¥—ñ—é', `choose_location:2`);

      await ctx.reply(
        '–ë–∞–∂–∞—î—Ç–µ –æ–±—Ä–∞—Ç–∏ –ª–æ–∫–∞—Ü—ñ—é –¥–ª—è –≤–∞—à–æ—ó —Ñ–æ—Ç–æ—Å–µ—Å—ñ—ó –ø–æ –º—ñ—Å—Ç—É –∞–±–æ –≤ —Å—Ç—É–¥—ñ—ó?üåçüèò',
        {
          reply_markup: inlineKeyboard,
        },
      );
    });
    this.bot.callbackQuery(/choose_location:(\d+)/, async (ctx) => {
      const locationType = ctx.match[1];

      let locations: string[];
      if (locationType === '1') {
        // –õ–æ–∫–∞—Ü—ñ—ó –¥–ª—è –≤—É–ª–∏—á–Ω–∏—Ö –∑–π–æ–º–æ–∫
        locations = ['–ë–æ—Ç–∞–Ω—ñ—á–Ω–∏–π —Å–∞–¥ –õ–ù–£', '–°—Ç—Ä–∏–π—Å—å–∫–∏–π –ø–∞—Ä–∫', '–ë—É–¥–∏–Ω–æ–∫ –í—á–µ–Ω–∏—Ö'];
      } else if (locationType === '2') {
        // –õ–æ–∫–∞—Ü—ñ—ó –¥–ª—è —Å—Ç—É–¥—ñ–π–Ω–∏—Ö –∑–π–æ–º–æ–∫
        locations = [
          'photostudio.81',
          'passage_studios',
          'luno_studio_',
          'esthetique_lviv',
          `Red Pine`,
        ];
      }

      // –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–Ω–æ–ø–æ–∫ –¥–ª—è –∫–æ–∂–Ω–æ—ó –ª–æ–∫–∞—Ü—ñ—ó
      const locationKeyboard = new InlineKeyboard();
      locations.forEach((location) => {
        if(locationType === '1') {
          locationKeyboard.text(location, `location:${location}`).row();
        }else if (locationType === '2') {
          locationKeyboard.url(location,'https://www.instagram.com/photostudio.81/?igsh=cXVqam04bnYydTl6').row();
        }
      });

      // –í—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∑ –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –≤–∏–±–æ—Ä—É –ª–æ–∫–∞—Ü—ñ—ó
      await ctx.reply('–û–±–µ—Ä—ñ—Ç—å –ª–æ–∫–∞—Ü—ñ—é:', { reply_markup: locationKeyboard });
    });
    this.bot.callbackQuery(/location:(.*)/, async (ctx) => {
      const locationName = ctx.match[1];
      console.log(locationName);
      switch (locationName) {
        case '–ë–æ—Ç–∞–Ω—ñ—á–Ω–∏–π —Å–∞–¥ –õ–ù–£':
          await ctx.replyWithPhoto('https://tvoemisto.tv/media/gallery/full/5/other/5_35f1c_c558d.jpg', {
            caption: '–ë–æ—Ç–∞–Ω—ñ—á–Ω–∏–π —Å–∞–¥ –õ—å–≤—ñ–≤—Å—å–∫–æ–≥–æ –Ω–∞—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ–≥–æ —É–Ω—ñ–≤–µ—Ä—Å–∏—Ç–µ—Ç—É —ñ–º–µ–Ω—ñ –Ü–≤–∞–Ω–∞ –§—Ä–∞–Ω–∫–∞',
            parse_mode: 'Markdown',
          });
          await ctx.replyWithLocation(49.83270528787713, 24.031263115091303); //–±–æ—Ç–∞–Ω —Å–∞–¥
          
          break;
        case '–°—Ç—Ä–∏–π—Å—å–∫–∏–π –ø–∞—Ä–∫':
          await ctx.replyWithPhoto('https://ua.igotoworld.com/frontend/webcontent/websites/1/images/gallery/8391_800x600_Park_Stryjski(1).jpg', {
            caption: '–°—Ç—Ä–∏–π—Å—å–∫–∏–π –ø–∞—Ä–∫',
            parse_mode: 'Markdown',
          });
          await ctx.replyWithLocation(49.8230219, 24.024981); //—Å—Ç—Ä–∏–π –ø–∞—Ä–∫
          break;
        case '–ë—É–¥–∏–Ω–æ–∫ –í—á–µ–Ω–∏—Ö':
          await ctx.replyWithPhoto('https://inside-ua.com/files/originals/budinok-vchenih-3.webp', {
            caption: '–ë—É–¥–∏–Ω–æ–∫ –í—á–µ–Ω–∏—Ö –∑–∞ –∞–¥—Ä–µ—Å–æ—é –≤—É–ª–∏—Ü—è –õ–∏—Å—Ç–æ–ø–∞–¥–æ–≤–æ–≥–æ –ß–∏–Ω—É, 6',
            parse_mode: 'Markdown',
          });
          await ctx.replyWithLocation(49.8410923, 24.02141);
          break;

        default:
          break;
      }
      const inlineKeyboard = new InlineKeyboard()
        .text('üåç –û–±—Ä–∞—Ç–∏ –ª–æ–∫–∞—Ü—ñ—é –ø–æ –º—ñ—Å—Ç—É', `choose_location:1`)
        .text('üèò –û–±—Ä–∞—Ç–∏ —Å—Ç—É–¥—ñ—é', `choose_location:2`);

      await ctx.reply('–û–±–µ—Ä—ñ—Ç—å –Ω–∞—Å—Ç—É–ø–Ω—É –ª–æ–∫–∞—Ü—ñ—é:', {
        reply_markup: inlineKeyboard,
      });
      //–≤—á–µ–Ω–∏—Ö
      
      
    });
    this.bot.start();
  }

  getBot() {
    return this.bot;
  }
}
